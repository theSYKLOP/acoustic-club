import{y as i,x as a}from"#entry";const u=i("tables",{state:()=>({tables:[],selectedTable:null,loading:!1,error:null}),getters:{tablesByStatus:e=>t=>e.tables.filter(r=>r.status===t),freeTables:e=>e.tables.filter(t=>t.status==="LIBRE"),occupiedTables:e=>e.tables.filter(t=>t.status==="OCCUPEE"),reservedTables:e=>e.tables.filter(t=>t.status==="RESERVEE"),totalTables:e=>e.tables.length,occupancyRate:e=>{if(e.tables.length===0)return 0;const t=e.tables.filter(r=>r.status==="OCCUPEE").length;return Math.round(t/e.tables.length*100)}},actions:{async fetchTables(){this.loading=!0,this.error=null;try{const e=a();this.tables=await $fetch("/api/tables",{headers:{Authorization:`Bearer ${e.token}`}})}catch(e){this.error=e.data?.message||"Erreur lors du chargement des tables"}finally{this.loading=!1}},async fetchTable(e){this.loading=!0,this.error=null;try{const t=a();this.selectedTable=await $fetch(`/api/tables/${e}`,{headers:{Authorization:`Bearer ${t.token}`}})}catch(t){this.error=t.data?.message||"Erreur lors du chargement de la table"}finally{this.loading=!1}},async createTable(e){this.loading=!0,this.error=null;try{const t=a(),r=await $fetch("/api/tables",{method:"POST",headers:{Authorization:`Bearer ${t.token}`},body:e});return this.tables.push(r),{success:!0,data:r}}catch(t){return this.error=t.data?.message||"Erreur lors de la création de la table",{success:!1,error:this.error}}finally{this.loading=!1}},async updateTable(e,t){this.loading=!0,this.error=null;try{const r=a(),s=await $fetch(`/api/tables/${e}`,{method:"PUT",headers:{Authorization:`Bearer ${r.token}`},body:t}),l=this.tables.findIndex(o=>o.id===e);return l!==-1&&(this.tables[l]=s),{success:!0,data:s}}catch(r){return this.error=r.data?.message||"Erreur lors de la mise à jour de la table",{success:!1,error:this.error}}finally{this.loading=!1}},async deleteTable(e){this.loading=!0,this.error=null;try{const t=a();return await $fetch(`/api/tables/${e}`,{method:"DELETE",headers:{Authorization:`Bearer ${t.token}`}}),this.tables=this.tables.filter(r=>r.id!==e),{success:!0}}catch(t){return this.error=t.data?.message||"Erreur lors de la suppression de la table",{success:!1,error:this.error}}finally{this.loading=!1}},async updateTableStatus(e,t){return this.updateTable(e,{status:t})}}});export{u};
